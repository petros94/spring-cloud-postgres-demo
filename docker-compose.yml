version: '3'

services:
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  configserver:
    build: configserver/.
    image: spring-cloud-postgres-demo/cloud-configserver:1
    ports:
      - "8888:8888"
  eureka:
    build: eureka/.
    image: spring-cloud-postgres-demo/cloud-eureka:1
    ports:
      - "8761:8761"
    environment:
      - CONFIGSERVER_HOST=configserver
    depends_on:
      - configserver
  edgeservice:
    build: edgeservice/.
    image: spring-cloud-postgres-demo/cloud-edgeservice:1
    ports:
      - "8080:8080"
    environment:
      - EUREKA_HOST=eureka
      - ZIPKIN_HOST=zipkin
      - CONFIGSERVER_HOST=configserver
    depends_on:
      - eureka
  userservice:
    build: userservice/.
    image: spring-cloud-postgres-demo/userservice:1
    environment:
      - EUREKA_HOST=eureka
      - CONFIGSERVER_HOST=configserver
      - POSTGRES_HOST=postgres
    depends_on:
      - eureka
      - postgres
  postgres:
    build: postgres/
    image: spring-cloud-postgres-demo/postgres-test:1
    volumes:
      - demo-db-data:/tmpfs/tmp
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    depends_on:
      - configserver
  ui:
    build:
      context: ui
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://localhost:8080/userservice
    image: spring-cloud-postgres-demo/ui:1
    ports:
      - "3000:80"
    restart: always

volumes:
  demo-db-data: